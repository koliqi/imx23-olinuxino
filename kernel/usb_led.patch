diff -u a/arch/arm/boot/dts/imx23.dtsi b/arch/arm/boot/dts/imx23.dtsi
--- a/arch/arm/boot/dts/imx23.dtsi 2012-08-28 23:00:09.000000000 +0200
+++ b/arch/arm/boot/dts/imx23.dtsi	2012-08-28 17:44:43.000000000 +0200
@@ -425,7 +425,8 @@
 				status = "disabled";
 			};
 
-			usbphy@8007c000 {
+			usbphy0: usbphy@8007c000 {
+				compatible = "fsl,imx23-usbphy";
 				reg = <0x8007c000 0x2000>;
 				status = "disabled";
 			};
@@ -439,8 +440,11 @@
 		reg = <0x80080000 0x80000>;
 		ranges;
 
-		usbctrl@80080000 {
+		usb0: usb@80080000 {
+			compatible = "fsl,imx23-usb", "fsl,imx27-usb";
 			reg = <0x80080000 0x40000>;
+			interrupts = <11>;
+			fsl,usbphy = <&usbphy0>;
 			status = "disabled";
 		};
 	};
diff -u a/arch/arm/boot/dts/imx23-olinuxino.dts b/arch/arm/boot/dts/imx23-olinuxino.dts
--- a/arch/arm/boot/dts/imx23-olinuxino.dts	2012-08-28 23:00:02.000000000 +0200
+++ 2/arch/arm/boot/dts/imx23-olinuxino.dts	2012-08-28 17:46:35.000000000 +0200
@@ -27,10 +27,36 @@
 			ssp0: ssp@80010000 {
 				compatible = "fsl,imx23-mmc";
 				pinctrl-names = "default";
-				pinctrl-0 = <&mmc0_4bit_pins_a &mmc0_pins_fixup>;
+				pinctrl-0 = <&mmc0_4bit_pins_a &mmc0_pins_fixup &led_pins_a>;
 				bus-width = <4>;
 				status = "okay";
 			};
+
+			pinctrl@80018000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&hog_pins_a>;
+
+				hog_pins_a: hog-gpios@0 {
+					reg = <0>;
+					fsl,pinmux-ids = <
+						0x0113 /* MX23_PAD_GPMI_ALE__GPIO_0_17 */
+					>;
+					fsl,drive-strength = <2>;
+					fsl,voltage = <1>;
+					fsl,pull-up = <1>;
+				};
+				
+				led_pins_a: led_pins_a@0 {
+					reg = <0>;
+					fsl,pinmux-ids = <
+						0x2013 /* MX23_PAD_SSP1_DETECT__GPIO_2_1 */
+					>;
+					fsl,drive-strength = <0>;
+					fsl,voltage = <1>;
+					fsl,pull-up = <0>;
+				};
+				
+			};
 		};
 
 		apbx@80040000 {
@@ -45,6 +71,43 @@
 				pinctrl-0 = <&auart0_2pins_a>;
 				status = "okay";
 			};
+
+			usbphy0: usbphy@8007c000 {
+				status = "okay";
+			};
 		};
+
 	};
+
+	ahb@80080000 {
+		usb0: usb@80080000 {
+			vbus-supply = <&reg_usb0_vbus>;
+			status = "okay";
+		};
+	};
+
+	regulators {
+		compatible = "simple-bus";
+
+		reg_usb0_vbus: usb0_vbus {
+			compatible = "regulator-fixed";
+			regulator-name = "usb0_vbus";
+			regulator-min-microvolt = <5000000>;
+			regulator-max-microvolt = <5000000>;
+			enable-active-high;
+			startup-delay-us = <300>; /* LAN9215 requires a POR of 200us minimum */
+			gpio = <&gpio0 17 0>;
+		};
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		user {
+			label = "Heartbeat";
+			gpios = <&gpio2 1 0>;
+			linux,default-trigger = "heartbeat";
+		};
+	};	
 };
+
diff -u a/drivers/usb/otg/mxs-phy.c b/drivers/usb/otg/mxs-phy.c
--- a/drivers/usb/otg/mxs-phy.c	2012-08-28 23:35:51.000000000 +0200
+++ b/drivers/usb/otg/mxs-phy.c	2012-08-28 23:36:03.000000000 +0200
@@ -24,10 +24,20 @@
 #define DRIVER_NAME "mxs_phy"
 
 #define HW_USBPHY_PWD				0x00
+#define HW_USBPHY_PWD_SET			0x04
+#define HW_USBPHY_PWD_CLR			0x08
 #define HW_USBPHY_CTRL				0x30
 #define HW_USBPHY_CTRL_SET			0x34
 #define HW_USBPHY_CTRL_CLR			0x38
 
+#define BM_USBPHY_PWD_RXPWDRX			BIT(20)
+#define BM_USBPHY_PWD_RXPWDIFF			BIT(19)
+#define BM_USBPHY_PWD_RXPWD1PT1			BIT(18)
+#define BM_USBPHY_PWD_RXPWDENV			BIT(17)
+#define BM_USBPHY_PWD_TXPWDV2I			BIT(12)
+#define BM_USBPHY_PWD_TXPWDIBIAS		BIT(11)
+#define BM_USBPHY_PWD_TXPWDFS			BIT(10)
+
 #define BM_USBPHY_CTRL_SFTRST			BIT(31)
 #define BM_USBPHY_CTRL_CLKGATE			BIT(30)
 #define BM_USBPHY_CTRL_ENUTMILEVEL3		BIT(15)
@@ -43,14 +53,33 @@
 
 static void mxs_phy_hw_init(struct mxs_phy *mxs_phy)
 {
+        int reset_sts;
 	void __iomem *base = mxs_phy->phy.io_priv;
 
-	stmp_reset_block(base + HW_USBPHY_CTRL);
-
-	/* Power up the PHY */
-	writel_relaxed(0, base + HW_USBPHY_PWD);
+	/* Use global device reset function.  Side effect of this 
+	   is to soft reset USBPHY_PWD, USBPHY_TX, USBPHY_RX, 
+	   and USBPHY_CTRL registers. */
+	reset_sts = stmp_reset_block(base + HW_USBPHY_CTRL);
+	if (reset_sts) {
+		dev_err(mxs_phy->phy.dev, "USB PHY reset failed!\n");
+	}
+
+	/* Enable the PHY clock after reset. */
+	writel_relaxed(BM_USBPHY_CTRL_SFTRST |
+			BM_USBPHY_CTRL_CLKGATE,
+			base + HW_USBPHY_CTRL_CLR);
+
+	/* Power up the PHY after reset. */
+	writel_relaxed(BM_USBPHY_PWD_RXPWDRX |
+			BM_USBPHY_PWD_RXPWDIFF |
+			BM_USBPHY_PWD_RXPWD1PT1	|
+			BM_USBPHY_PWD_RXPWDENV |
+			BM_USBPHY_PWD_TXPWDV2I |
+			BM_USBPHY_PWD_TXPWDIBIAS |
+			BM_USBPHY_PWD_TXPWDFS, 
+			base + HW_USBPHY_PWD_CLR);
 
-	/* enable FS/LS device */
+	/* Enable FS/LS device.  Not supported on i.MX23. */
 	writel_relaxed(BM_USBPHY_CTRL_ENUTMILEVEL2 |
 			BM_USBPHY_CTRL_ENUTMILEVEL3,
 			base + HW_USBPHY_CTRL_SET);
@@ -70,6 +99,17 @@
 {
 	struct mxs_phy *mxs_phy = to_mxs_phy(phy);
 
+        /* Power down USB receivers and transmitters. */
+	writel_relaxed(BM_USBPHY_PWD_RXPWDRX |
+			BM_USBPHY_PWD_RXPWDIFF |
+			BM_USBPHY_PWD_RXPWD1PT1	|
+			BM_USBPHY_PWD_RXPWDENV |
+			BM_USBPHY_PWD_TXPWDV2I |
+			BM_USBPHY_PWD_TXPWDIBIAS |
+			BM_USBPHY_PWD_TXPWDFS, 
+			phy->io_priv + HW_USBPHY_PWD_SET);
+
+	/* Disable clock. */
 	writel_relaxed(BM_USBPHY_CTRL_CLKGATE,
 			phy->io_priv + HW_USBPHY_CTRL_SET);
 
@@ -81,8 +121,6 @@
 	dev_dbg(phy->dev, "Connect on port %d\n", port);
 
 	mxs_phy_hw_init(to_mxs_phy(phy));
-	writel_relaxed(BM_USBPHY_CTRL_ENHOSTDISCONDETECT,
-			phy->io_priv + HW_USBPHY_CTRL_SET);
 
 	return 0;
 }